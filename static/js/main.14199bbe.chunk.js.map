{"version":3,"sources":["App.js","index.js"],"names":["Score","Pairs","Final_message","Points_faux","Card","props","style","visible","pointerEvents","backgroundImage","onClick","click","className","CardGrid","cartes","map","card","EtatCarte","Cliquables","id","NouvellePartie","startNouvellePartie","Difficile","Facile","App","shuffle","arr","sort","Math","random","window","location","reload","cartevisible","state","Selection2","IDcarteVisible","filter","couleurcarte1","couleurcarte2","cartesIdentiques","includes","setState","cartesdiff","setTimeout","this","Component","ReactDOM","render","document","getElementById"],"mappings":"wNAGIA,G,MAAQ,GACRC,EAAQ,EACRC,EAAgB,GAEhBC,EAAc,EAEZC,EAAO,SAAAC,GACX,IAAIC,EAAQ,GAGZ,OAFID,EAAME,UACRD,EAAQ,CAAEE,cAAe,OAAQC,gBAAiBJ,EAAMI,kBACnD,qBAAKC,QAASL,EAAMM,MAAOL,MAAOA,EAAOM,UAAU,UAGtDC,EAAW,SAAAR,GACf,IAAMS,EAAST,EAAMS,OAAOC,KAAI,SAAAC,GAAI,OAClC,cAAC,EAAD,CAEEP,gBAAiBO,EAAKP,gBACtBF,QAASS,EAAKC,UACdN,MAAO,kBAAMN,EAAMa,WAAWF,EAAKG,MAH9BH,EAAKG,OAMd,OAAO,qBAAKP,UAAU,cAAf,SAA8BE,KAGjCM,EAAiB,SAAAf,GACrB,OACE,wBAAQK,QAASL,EAAMgB,oBAAqBT,UAAU,QAAtD,+BAMEU,EAAY,SAAAjB,GAChB,OACE,wBAAQK,QAASL,EAAMiB,UAAWV,UAAU,OAA5C,SACE,4CAKAW,EAAS,SAAAlB,GACb,OACE,wBAAQK,QAASL,EAAMkB,OAAQX,UAAU,OAAzC,SACE,6CAyISY,E,kDAnIb,WAAYnB,GAAQ,IAAD,uBACjB,cAAMA,IA4BRoB,QAAU,SAAAC,GAAG,OAAIA,EAAIC,MAAK,iBAAM,GAAMC,KAAKC,aA7BxB,EA8BnBR,oBAAsB,kBAAMS,OAAOC,SAASC,UA9BzB,EA+BnBV,UAAY,kBAAMnB,EAAc,GA/Bb,EAgCnBoB,OAAS,kBAAMpB,EAAc,GAhCV,EAkCnBe,WAAa,SAAAC,GACX,IAAMc,EAAe,EAAKC,MAAMpB,OAAOC,KAAI,SAAAC,GACzC,OAAIA,EAAKG,KAAOA,EACP,2BAAKH,GAAZ,IAAkBC,UAAW,IAExBD,KAEDmB,EAAe,EAAKD,MAApBC,WAEFC,EAAiBH,EACpBI,QAAO,SAAArB,GAAI,OAAuB,IAAnBA,EAAKC,aACpBF,KAAI,SAAAC,GAAI,OAAIA,EAAKG,MAGdmB,EADQL,EAAaI,QAAO,SAAArB,GAAI,OAAIA,EAAKG,KAAOiB,EAAe,MACzC,GAAG3B,gBAE/B,GAAI0B,EAAY,CACd,IACMI,EADSN,EAAaI,QAAO,SAAArB,GAAI,OAAIA,EAAKG,KAAOiB,EAAe,MACzC,GAAG3B,gBAChC,GAAI6B,IAAkBC,EAAe,CACnC,IAAMC,EAAmBP,EAAalB,KAAI,SAAAC,GAAI,OAC5CoB,EAAeK,SAASzB,EAAKG,IAA7B,2BAAwCH,GAAxC,IAA8CC,UAAW,IAAMD,KAWjE,OARAhB,GAzGU,EA4GI,KAFdC,GAAgB,KAGdC,EAAgB,qEAGlB,EAAKwC,SAAS,CAAE5B,OAAQ0B,EAAkBL,YAAY,IAEjD,GAAIG,IAAkBC,EAAe,CAC1C,IAAMI,EAAaV,EAAalB,KAAI,SAAAC,GAAI,OACtCoB,EAAeK,SAASzB,EAAKG,IAA7B,2BAAwCH,GAAxC,IAA8CC,UAAW,IAAMD,KASjE,OAPA,EAAK0B,SAAS,CAAE5B,OAAQmB,IAAgB,kBACtCW,YACE,kBAAM,EAAKF,SAAS,CAAE5B,OAAQ6B,EAAYR,YAAY,MACtD,aAGJnC,GAAgBG,IAIpB,EAAKuC,SAAS,CAAE5B,OAAQmB,EAAcE,YAAY,KA/ElD,IAAMlB,EACS,EAIXH,EAAS,CACX,CAAEK,GAAI,EAAGF,UAAWA,EAAuBR,gBAAgB,oEAC3D,CAAEU,GAAI,EAAGF,UAAWA,EAAuBR,gBAAgB,oEAC3D,CAAEU,GAAI,EAAGF,UAAWA,EAAuBR,gBAAgB,4DAC3D,CAAEU,GAAI,EAAGF,UAAWA,EAAuBR,gBAAgB,4DAC3D,CAAEU,GAAI,EAAGF,UAAWA,EAAuBR,gBAAgB,0EAC3D,CAAEU,GAAI,EAAGF,UAAWA,EAAuBR,gBAAgB,0EAC3D,CAAEU,GAAI,EAAGF,UAAWA,EAAuBR,gBAAgB,6DAC3D,CAAEU,GAAI,EAAGF,UAAWA,EAAuBR,gBAAgB,6DAC3D,CAAEU,GAAI,EAAGF,UAAWA,EAAuBR,gBAAgB,uEAC3D,CAAEU,GAAI,EAAGF,UAAWA,EAAuBR,gBAAgB,uEAC3D,CAAEU,GAAI,GAAIF,UAAWA,EAAuBR,gBAAgB,sEAC5D,CAAEU,GAAI,GAAIF,UAAWA,EAAuBR,gBAAgB,sEAC5D,CAAEU,GAAI,GAAIF,UAAWA,EAAuBR,gBAAgB,qEAC5D,CAAEU,GAAI,GAAIF,UAAWA,EAAuBR,gBAAgB,qEAC5D,CAAEU,GAAI,GAAIF,UAAWA,EAAuBR,gBAAgB,oEAC5D,CAAEU,GAAI,GAAIF,UAAWA,EAAuBR,gBAAgB,qEAvB7C,OAyBjBK,EAAS,EAAKW,QAAQX,GACtB,EAAKoB,MAAQ,CAAEpB,SAAQqB,YAAY,GA1BlB,E,qDAqFjB,OACE,sBAAKvB,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SAAuB,0DAEvB,+BACE,qBAAKA,UAAU,uBAAf,SACE,cAAC,EAAD,CAAgBS,oBAAqBwB,KAAKxB,wBAG5C,uBACA,uBAEA,sBAAKT,UAAU,iBAAf,UACE,8BACE,cAAC,EAAD,CAAWU,UAAWuB,KAAKvB,UAAWnB,YAAa0C,KAAKX,MAAM/B,gBAGhE,uBAEA,8BACE,cAAC,EAAD,CAAQoB,OAAQsB,KAAKtB,OAAQpB,YAAa0C,KAAKX,MAAM/B,gBAGvD,oBAAGS,UAAU,IAAb,wCAEE,uBAFF,6BASJ,cAAC,EAAD,CAAUM,WAAY2B,KAAK3B,WAAYJ,OAAQ+B,KAAKX,MAAMpB,SAC1D,uBACA,sBAAKF,UAAU,QAAf,UACE,wDACA,qBAAKA,UAAU,eAAf,SAA+BZ,IAC/B,uBACA,4BAAIE,c,GA5HI4C,aChDlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.14199bbe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nlet Score = 0;\nlet Pairs = 0;\nlet Final_message = \"\";\nlet Points_vrai = 3;\nlet Points_faux = 1;\n\nconst Card = props => {\n  let style = {};\n  if (props.visible)\n    style = { pointerEvents: \"none\", backgroundImage: props.backgroundImage };\n  return <div onClick={props.click} style={style} className=\"card\" />;\n};\n\nconst CardGrid = props => {\n  const cartes = props.cartes.map(card => (\n    <Card\n      key={card.id}\n      backgroundImage={card.backgroundImage}\n      visible={card.EtatCarte}\n      click={() => props.Cliquables(card.id)}\n    />\n  ));\n  return <div className=\"cards-block\">{cartes}</div>;\n};\n\nconst NouvellePartie = props => {\n  return (\n    <button onClick={props.startNouvellePartie} className=\"reset\">\n      Start a New Game\n    </button>\n  );\n};\n\nconst Difficile = props => {\n  return (\n    <button onClick={props.Difficile} className=\"hard\">\n      <b>HARD MOD</b>\n    </button>\n  );\n};\n\nconst Facile = props => {\n  return (\n    <button onClick={props.Facile} className=\"easy\">\n      <b>EASY MOD </b>\n    </button>\n  );\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const EtatCarte = {\n      non_visible: 0,\n      visible: 1,\n      identique: 2\n    };\n    let cartes = [\n      { id: 0, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/9/9e/SMW_Fire_Flower.jpg\")`}, \n      { id: 1, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/9/9e/SMW_Fire_Flower.jpg\")`}, \n      { id: 2, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/a/ac/SMW_Egg.jpg\")`}, \n      { id: 3, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/a/ac/SMW_Egg.jpg\")`}, \n      { id: 4, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/e/e0/3-Up_Moon_SMW_artwork.jpg\")`}, \n      { id: 5, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/e/e0/3-Up_Moon_SMW_artwork.jpg\")`}, \n      { id: 6, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/5/5e/SMW_Star.jpg\")`}, \n      { id: 7, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/5/5e/SMW_Star.jpg\")`}, \n      { id: 8, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/2/24/SMW_Super_Mushroom.jpg\")`}, \n      { id: 9, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/2/24/SMW_Super_Mushroom.jpg\")`}, \n      { id: 10, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/e/ec/SMW_1-Up_Mushroom.jpg\")`}, \n      { id: 11, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/e/ec/SMW_1-Up_Mushroom.jpg\")`}, \n      { id: 12, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/f/fb/SMW_Cape_Feather.jpg\")`}, \n      { id: 13, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/f/fb/SMW_Cape_Feather.jpg\")`}, \n      { id: 14, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/c/ca/SMW_Prize_Block.jpg\")`}, \n      { id: 15, EtatCarte: EtatCarte.non_visible, backgroundImage: `url(\"https://www.mariowiki.com/images/c/ca/SMW_Prize_Block.jpg\")`}\n    ];\n    cartes = this.shuffle(cartes);\n    this.state = { cartes, Selection2: false };\n  }\n\n  shuffle = arr => arr.sort(() => 0.5 - Math.random());\n  startNouvellePartie = () => window.location.reload()\n  Difficile = () => Points_faux = 5;\n  Facile = () => Points_faux = 1;\n\n  Cliquables = id => {\n    const cartevisible = this.state.cartes.map(card => {\n      if (card.id === id) {\n        return { ...card, EtatCarte: 1 };\n      }\n      return card;\n    });\n    const { Selection2 } = this.state;\n\n    const IDcarteVisible = cartevisible\n      .filter(card => card.EtatCarte === 1)\n      .map(card => card.id);\n\n    const card1 = cartevisible.filter(card => card.id === IDcarteVisible[0]);\n    const couleurcarte1 = card1[0].backgroundImage;\n\n    if (Selection2) {\n      const carte2 = cartevisible.filter(card => card.id === IDcarteVisible[1]);\n      const couleurcarte2 = carte2[0].backgroundImage;\n      if (couleurcarte1 === couleurcarte2) {\n        const cartesIdentiques = cartevisible.map(card =>\n          IDcarteVisible.includes(card.id) ? { ...card, EtatCarte: 2 } : card\n        );\n\n        Score = Score + Points_vrai;\n        Pairs = Pairs + 1;\n\n        if (Pairs === 8) {\n          Final_message = \"You won ! Congratulations ! Mario is proud of ur moustache !\"\n        }\n\n        this.setState({ cartes: cartesIdentiques, Selection2: false });\n        return;\n      } else if (couleurcarte1 !== couleurcarte2) {\n        const cartesdiff = cartevisible.map(card =>\n          IDcarteVisible.includes(card.id) ? { ...card, EtatCarte: 0 } : card\n        );\n        this.setState({ cartes: cartevisible }, () =>\n          setTimeout(\n            () => this.setState({ cartes: cartesdiff, Selection2: false }),\n            300\n          )\n        );\n        Score = Score - Points_faux;\n        return;\n      }\n    }\n    this.setState({ cartes: cartevisible, Selection2: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"texts\"><b>SUPER MARIO MEMORY GAME</b></div>\n\n        <ul>\n          <div className=\"box_difficulty_reset\">\n            <NouvellePartie startNouvellePartie={this.startNouvellePartie}/>\n          </div>\n\n          <br></br>\n          <br></br>\n\n          <div className=\"box_difficulty\">\n            <div>\n              <Difficile Difficile={this.Difficile} Points_faux={this.state.Points_faux} />\n            </div>\n\n            <br></br>\n            \n            <div>\n              <Facile Facile={this.Facile} Points_faux={this.state.Points_faux}/>\n            </div>\n\n            <p className=\"p\">\n              Easy = -1/mistake (default)\n              <br></br>\n              Hard = -5/mistake\n            </p>\n          </div>\n\n        </ul>\n\n        <CardGrid Cliquables={this.Cliquables} cartes={this.state.cartes} />\n        <br></br>\n        <div className=\"texts\">\n          <b>Your current score is: </b>\n          <div className=\"texts_result\">{Score}</div>\n          <br></br>\n          <b>{Final_message}</b>\n          </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}